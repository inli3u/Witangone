HANDLING OF CONTROL STRUCTURES

echo containing control structures - all nested outputs are echoed

text
<@if '1=2'>
more text
</@if>

variable assignment containing control structures - all nested outputs get $var .= 'ouput'

<@assign name='request$var2' 'text<@if "1=2">more<@else>less</@if>'>

expression containing control structures

<@left 'text<@if "1 = 2">more<@else>less</@if>' 5>

expression containing multiple control structures

<@left 'text<@if "1 = 2">more<@else>less</@if> - <@if "3 = 4">this<@else>that</@if>' 5>

expression containing nested control structures

<@left 'text<@if "1 = 2">mo<@keep "<@if '8=9'>re</@if>" "12"><@else>less</@if>' 5>

expression containing functions just for testing

<@left 'text<@keep "more" "oe">' 5>



HANDLING OF SIBLING STATEMENTS

echo containing list of nodes - each output gets separate line:
functions decide whether they return something or not

text
@@request$var
<@keep "1234" "12">
text

variable assignment containing list of nodes - each output gets separate line:

<@assign 'request$var' 'text @@request$var <@keep "1234" "12"> text'>

expression containing list of nodes - concat together on same line

<@keep "text @@request$var <@currentdate> text" "abc">